<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-17T15:09:56 IST" name="Suite" finished-at="2022-07-17T15:11:51 IST" duration-ms="114611">
    <groups>
    </groups>
    <test started-at="2022-07-17T15:09:56 IST" name="Validationg the title" finished-at="2022-07-17T15:11:35 IST" duration-ms="98852">
      <class name="Academy.validateTitle">
        <test-method is-config="true" signature="initilize()[pri:0, instance:Academy.validateTitle@24faea88]" started-at="2022-07-17T15:09:56 IST" name="initilize" finished-at="2022-07-17T15:10:54 IST" duration-ms="57708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilize -->
        <test-method signature="titleBar()[pri:0, instance:Academy.validateTitle@24faea88]" started-at="2022-07-17T15:10:54 IST" name="titleBar" finished-at="2022-07-17T15:10:55 IST" duration-ms="1088" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Featured cources123] but found [FEATURED COURSES]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Featured cources123] but found [FEATURED COURSES]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at Academy.validateTitle.titleBar(validateTitle.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleBar -->
        <test-method signature="validateHeader()[pri:0, instance:Academy.validateTitle@24faea88]" started-at="2022-07-17T15:11:01 IST" name="validateHeader" finished-at="2022-07-17T15:11:03 IST" duration-ms="1811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHeader -->
        <test-method is-config="true" signature="teardrow()[pri:0, instance:Academy.validateTitle@24faea88]" started-at="2022-07-17T15:11:03 IST" name="teardrow" finished-at="2022-07-17T15:11:35 IST" duration-ms="32364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardrow -->
      </class> <!-- Academy.validateTitle -->
    </test> <!-- Validationg the title -->
    <test started-at="2022-07-17T15:09:56 IST" name="Validationg Navigation Bar" finished-at="2022-07-17T15:11:38 IST" duration-ms="101289">
      <class name="Academy.validateNavigationBar">
        <test-method is-config="true" signature="initilize()[pri:0, instance:Academy.validateNavigationBar@46f699d5]" started-at="2022-07-17T15:09:56 IST" name="initilize" finished-at="2022-07-17T15:11:11 IST" duration-ms="74541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilize -->
        <test-method signature="validateNavigation()[pri:0, instance:Academy.validateNavigationBar@46f699d5]" started-at="2022-07-17T15:11:11 IST" name="validateNavigation" finished-at="2022-07-17T15:11:14 IST" duration-ms="3289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateNavigation -->
        <test-method is-config="true" signature="teardrow()[pri:0, instance:Academy.validateNavigationBar@46f699d5]" started-at="2022-07-17T15:11:14 IST" name="teardrow" finished-at="2022-07-17T15:11:38 IST" duration-ms="23428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardrow -->
      </class> <!-- Academy.validateNavigationBar -->
    </test> <!-- Validationg Navigation Bar -->
    <test started-at="2022-07-17T15:09:56 IST" name="Home page" finished-at="2022-07-17T15:11:38 IST" duration-ms="101498">
      <class name="Academy.HomePage">
        <test-method is-config="true" signature="initilize()[pri:0, instance:Academy.HomePage@1d1f7216]" started-at="2022-07-17T15:09:56 IST" name="initilize" finished-at="2022-07-17T15:10:15 IST" duration-ms="18539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilize -->
        <test-method signature="basePageNavigation(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Academy.HomePage@1d1f7216]" started-at="2022-07-17T15:10:15 IST" name="basePageNavigation" data-provider="getData" finished-at="2022-07-17T15:11:06 IST" duration-ms="50980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nonrestrected@user.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123123123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Non Restrected user]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="basePageNavigation(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Academy.HomePage@1d1f7216]" started-at="2022-07-17T15:11:06 IST" name="basePageNavigation" data-provider="getData" finished-at="2022-07-17T15:11:35 IST" duration-ms="28670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restrected@user.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcded]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Restrected user]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method is-config="true" signature="teardrow()[pri:0, instance:Academy.HomePage@1d1f7216]" started-at="2022-07-17T15:11:35 IST" name="teardrow" finished-at="2022-07-17T15:11:38 IST" duration-ms="3281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardrow -->
      </class> <!-- Academy.HomePage -->
    </test> <!-- Home page -->
    <test started-at="2022-07-17T15:09:56 IST" name="Sing up flow" finished-at="2022-07-17T15:11:51 IST" duration-ms="114597">
      <class name="Academy.Registration">
        <test-method is-config="true" signature="initilize()[pri:0, instance:Academy.Registration@2a1edad4]" started-at="2022-07-17T15:09:56 IST" name="initilize" finished-at="2022-07-17T15:10:15 IST" duration-ms="18277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilize -->
        <test-method signature="registerNewUser(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Academy.Registration@2a1edad4]" started-at="2022-07-17T15:10:15 IST" name="registerNewUser" data-provider="getData2" finished-at="2022-07-17T15:11:22 IST" duration-ms="67131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[KKK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc@test.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid Registration]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewUser -->
        <test-method signature="registerNewUser(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Academy.Registration@2a1edad4]" started-at="2022-07-17T15:11:22 IST" name="registerNewUser" data-provider="getData2" finished-at="2022-07-17T15:11:50 IST" duration-ms="28480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nikit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nikit.umb@yopmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid Registration]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewUser -->
        <test-method is-config="true" signature="teardrow()[pri:0, instance:Academy.Registration@2a1edad4]" started-at="2022-07-17T15:11:50 IST" name="teardrow" finished-at="2022-07-17T15:11:51 IST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardrow -->
      </class> <!-- Academy.Registration -->
    </test> <!-- Sing up flow -->
  </suite> <!-- Suite -->
</testng-results>
